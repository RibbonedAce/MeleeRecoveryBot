from melee.enums import Character

from Chains.Abstract import SideSlide
from Utils import Trajectory, TrajectoryFrame as TF, Vector2 as V2
from Utils.enums import LEDGE_GRAB_MODE


class RaptorBoost(SideSlide):
    TRAJECTORY = Trajectory(Character.CPTFALCON, 0, 30, LEDGE_GRAB_MODE.AFTER, False, [
        TF.fixed(V2.zero(), V2(3.78725, 2.73032)),
        TF.fixed(V2.zero(), V2(8.02988, 2.73032)),
        TF.fixed(V2.zero(), V2(8.15715, 2.73032)),
        TF.fixed(V2.zero(), V2(6.91919, 2.73032)),
        TF.fixed(V2.zero(), V2(6.86819, 1.90617)),
        TF.fixed(V2.zero(), V2(6.84862, 2.08945)),
        TF.fixed(V2.zero(), V2(6.79689, 2.25625)),
        TF.fixed(V2.zero(), V2(6.72339, 2.40133)),
        TF.fixed(V2.zero(), V2(6.629, 2.53273)),
        TF.fixed(V2.zero(), V2(6.53914, 2.66314)),
        TF.fixed(V2.zero(), V2(6.49925, 2.63678)),
        TF.fixed(V2.zero(), V2(6.54384, 2.61777)),
        TF.fixed(V2.zero(), V2(6.68341, 2.59514)),
        TF.fixed(V2.zero(), V2(6.93004, 2.55945)),
        TF.fixed(V2.zero(), V2(7.31392, 2.50366)),
        TF.fixed(V2(2.27937, 0), V2(7.25902, 2.57597)),
        TF.fixed(V2(1.82957, 0), V2(7.24419, 2.20474)),
        TF.fixed(V2(1.65988, 0), V2(7.36293, 2.21038)),
        TF.fixed(V2(1.77032, 0), V2(10.4538, 3.59588)),
        TF.fixed(V2(2.16086, 0), V2(10.73952, 3.68277)),
        TF.fixed(V2(2.40854, 0), V2(10.86107, 4.10989)),
        TF.fixed(V2(2.32754, 0), V2(11.01353, 4.10979)),
        TF.fixed(V2(2.24791, 0), V2(11.12446, 3.95215)),
        TF.fixed(V2(2.16967, 0), V2(11.2396, 3.82033)),
        TF.fixed(V2(2.09282, 0), V2(11.37151, 3.79396)),
        TF.fixed(V2(2.01735, 0), V2(11.50796, 3.8931)),
        TF.fixed(V2(1.94326, 0), V2(11.61216, 4.07447)),
        TF.fixed(V2(1.87056, 0), V2(11.6787, 4.27964)),
        TF.fixed(V2(1.79924, 0), V2(11.71288, 4.43861)),
        TF.fixed(V2(1.72931, -0.05), V2(11.71819, 4.52493)),
        TF.fixed(V2(1.66076, -0.1), V2(11.69933, 4.51804)),
        TF.fixed(V2(1.59359, -0.15), V2(11.6442, 4.38906)),
        TF.fixed(V2(1.52782, -0.2), V2(11.53226, 4.11228)),
        TF.fixed(V2(1.46342, -0.25), V2(11.32838, 3.67184)),
        TF.fixed(V2(1.4004, -0.3), V2(10.9791, 3.07395)),
        TF.fixed(V2(1.33878, -0.35), V2(9.81707, 1.15201)),
        TF.fixed(V2(1.27853, -0.4), V2(10.89488, 0)),
        TF.fixed(V2(1.21968, -0.45), V2(12.67571, 0)),
        TF.fixed(V2(1.1622, -0.5), V2(12.8278, 0)),
        TF.fixed(V2(1.10611, -0.55), V2(12.31119, 1.2988)),
        TF.fixed(V2(1.05141, -0.6), V2(10.33372, 0.23924)),
        TF.fixed(V2(0.99808, -0.65), V2(7.06634, 0)),
        TF.fixed(V2(0.94615, -0.7), V2(4.72509, 0)),
        TF.fixed(V2(0.89559, -0.75), V2(4.9105, 0.22355)),
        TF.fixed(V2(0.84642, -0.8), V2(6.33263, 0.73548)),
        TF.fixed(V2(0.79864, -0.85), V2(6.42918, 1.10453)),
        TF.fixed(V2(0.75225, -0.9), V2(6.46437, 1.39063)),
        TF.fixed(V2(0.70722, -0.95), V2(6.43492, 1.69522)),
        TF.fixed(V2(0.66359, -1), V2(4.89017, 2.0425)),
        TF.fixed(V2(0.62135, -1.05), V2(4.72839, 2.418)),
        TF.fixed(V2(0.58048, -1.1), V2(4.76573, 2.73204)),
        TF.fixed(V2(0.541, -1.15), V2(7.3318, 2.95683)),
        TF.fixed(V2(0.50291, -1.2), V2(8.29927, 3.07652)),
        TF.fixed(V2(0.46619, -1.25), V2(9.15936, 2.80036)),
        TF.fixed(V2(0.43089, -1.3), V2(9.8541, 2.4169)),
        TF.fixed(V2(0.39694, -1.35), V2(10.34127, 2.11477)),
        TF.fixed(V2(0.36437, -1.4), V2(10.61197, 1.90619)),
        TF.fixed(V2(0.3332, -1.45), V2(10.58328, 1.79178)),
        TF.fixed(V2(0.30343, -1.5), V2(10.05034, 1.81489)),
        TF.fixed(V2(0.275, -1.55), V2(8.81828, 0.27198)),
        TF.fixed(V2(0.248, -1.6), V2(7.25484, 0)),
        TF.fixed(V2(0.22235, -1.65), V2(4.51528, 0)),
        TF.fixed(V2(0.19812, -1.7), V2(2.74831, 0)),
        TF.fixed(V2(0.17523, -1.75), V2(2.66676, 0)),
        TF.fixed(V2(0.15378, -1.8), V2(3.9278, 0)),
        TF.fixed(V2(0.13364, -1.85), V2(3.12574, 0)),
        TF.fixed(V2(0.11496, -1.9), V2(3.30847, 1.60612)),
        TF.fixed(V2(0.09761, -1.95), V2(4.24731, 3.62517)),
        TF.fixed(V2(0.08167, -2), V2(5.25221, 3.63011)),
        TF.fixed(V2(0.06713, -2.05), V2(5.85935, 3.86222)),
        TF.fixed(V2(0.05394, -2.1), V2(6.2914, 4.24495)),
        TF.fixed(V2(0.04214, -2.15), V2(6.60296, 3.87188)),
        TF.fixed(V2(0.03175, -2.2), V2(6.86433, 3.4929)),
        TF.fixed(V2(0.02271, -2.25), V2(7.14101, 3.17443)),
        TF.fixed(V2(0.1509, -2.3), V2(4.95147, 2.93018)),
        TF.fixed(V2(0.00881, -2.35), V2(4.8081, 2.7849)),
        TF.fixed(V2(0.00396, -2.4), V2(4.80127, 2.75246)),
        TF.fixed(V2(0.00046, -2.45), V2(4.64814, 2.6666)),
        TF.fixed(V2(-0.00165, -2.5), V2(4.34089, 2.51716)),
        TF.drift(Character.CPTFALCON)
    ])

    @classmethod
    def create_trajectory(cls, character):
        return cls.TRAJECTORY