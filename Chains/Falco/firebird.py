from melee.enums import Character

from Chains.Abstract import FireAnimal
from Utils import Trajectory, TrajectoryFrame as TF, Vector2 as V2
from Utils.enums import LEDGE_GRAB_MODE


class FireBird(FireAnimal):
    TRAJECTORY = Trajectory(Character.FALCO, 42, 70, LEDGE_GRAB_MODE.ALWAYS, True, [
        TF(lambda v, i: V2(TF.reduce_singular(0.8 * v.x, 0.02), 0), V2(2, 4.88859)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), 0), V2(2, 5.94628)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), 0), V2(2.12389, 6.65456)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), 0), V2(2.07417, 6.33949)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), 0), V2(2, 6.13013)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), 0), V2(2, 5.63678)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), 0), V2(2, 5.20667)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), 0), V2(2, 4.95706)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), 0), V2(2, 4.94419)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), 0), V2(2, 4.99453)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), 0), V2(2, 5.04981)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), 0), V2(2, 5.02734)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), 0), V2(2, 4.98535)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), 0), V2(2, 4.96371)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), 0), V2(2, 4.9628)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.016), V2(2, 4.9812)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.032), V2(2, 4.98924)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.048), V2(2, 4.9776)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.064), V2(2, 4.94403)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.08), V2(2, 4.92355)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.096), V2(2, 4.92522)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.112), V2(2, 4.94272)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.128), V2(2, 4.95287)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.144), V2(2, 4.94634)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.16), V2(2, 4.9217)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.176), V2(2, 4.90535)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.192), V2(2, 4.90359)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.208), V2(2, 4.91172)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.224), V2(2, 4.91652)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.24), V2(2, 4.91006)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.256), V2(2, 4.89011)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.272), V2(2, 4.87927)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.288), V2(2, 4.88337)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.304), V2(2, 4.91299)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.32), V2(2, 5.01128)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.336), V2(2, 5.49743)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.352), V2(2, 5.60563)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.368), V2(2, 5.35302)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.384), V2(2, 5.30878)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.4), V2(2, 4.09591)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.416), V2(2, 2.66004)),
        TF(lambda v, i: V2(TF.reduce_singular(v.x, 0.02), -0.432), V2(3.69668, 2.34544)),
        TF.angle(4.2),
        TF.repeat(),
        TF.repeat(),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.reduce(0.17),
        TF.drift(Character.FALCO, V2(4.22708, 2.8562)),
        TF.drift(Character.FALCO, V2(4.39175, 4.2608)),
        TF.drift(Character.FALCO, V2(2.60956, 2.43257)),
        TF.drift(Character.FALCO, V2(2, 2.15451)),
        TF.drift(Character.FALCO, V2(2.06231, 1.91264)),
        TF.drift(Character.FALCO, V2(2, 2.18654)),
        TF.drift(Character.FALCO, V2(2, 1.75287)),
        TF.drift(Character.FALCO, V2(2, 1.66501)),
        TF.drift(Character.FALCO, V2(2, 2.10001)),
        TF.drift(Character.FALCO, V2(2, 2.91254)),
        TF.drift(Character.FALCO, V2(2.19424, 3.58929)),
        TF.drift(Character.FALCO, V2(2.24217, 3.21381)),
        TF.drift(Character.FALCO, V2(2.17722, 2.86174)),
        TF.drift(Character.FALCO, V2(2.00401, 2.62224)),
        TF.drift(Character.FALCO, V2(2, 2.39804)),
        TF.drift(Character.FALCO, V2(2, 2.02351)),
        TF.drift(Character.FALCO, V2(2, 1.82715)),
        TF.drift(Character.FALCO, V2(2, 0.90439)),
        TF.drift(Character.FALCO, V2(2.37942, 0)),
        TF.drift(Character.FALCO, V2(2.96388, 0)),
        TF.drift(Character.FALCO)
    ])

    @classmethod
    def create_trajectory(cls, character):
        return cls.TRAJECTORY

    @classmethod
    def _get_launch_end_frame(cls):
        return 64